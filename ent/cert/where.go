// Code generated by ent, DO NOT EDIT.

package cert

import (
	"sifu-tool/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldID, id))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldEmail, v))
}

// CertPath applies equality check predicate on the "certPath" field. It's identical to CertPathEQ.
func CertPath(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldCertPath, v))
}

// KeyPath applies equality check predicate on the "keyPath" field. It's identical to KeyPathEQ.
func KeyPath(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldKeyPath, v))
}

// Auto applies equality check predicate on the "auto" field. It's identical to AutoEQ.
func Auto(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldAuto, v))
}

// Result applies equality check predicate on the "result" field. It's identical to ResultEQ.
func Result(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldResult, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldEmail, v))
}

// CertPathEQ applies the EQ predicate on the "certPath" field.
func CertPathEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldCertPath, v))
}

// CertPathNEQ applies the NEQ predicate on the "certPath" field.
func CertPathNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldCertPath, v))
}

// CertPathIn applies the In predicate on the "certPath" field.
func CertPathIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldCertPath, vs...))
}

// CertPathNotIn applies the NotIn predicate on the "certPath" field.
func CertPathNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldCertPath, vs...))
}

// CertPathGT applies the GT predicate on the "certPath" field.
func CertPathGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldCertPath, v))
}

// CertPathGTE applies the GTE predicate on the "certPath" field.
func CertPathGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldCertPath, v))
}

// CertPathLT applies the LT predicate on the "certPath" field.
func CertPathLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldCertPath, v))
}

// CertPathLTE applies the LTE predicate on the "certPath" field.
func CertPathLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldCertPath, v))
}

// CertPathContains applies the Contains predicate on the "certPath" field.
func CertPathContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldCertPath, v))
}

// CertPathHasPrefix applies the HasPrefix predicate on the "certPath" field.
func CertPathHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldCertPath, v))
}

// CertPathHasSuffix applies the HasSuffix predicate on the "certPath" field.
func CertPathHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldCertPath, v))
}

// CertPathIsNil applies the IsNil predicate on the "certPath" field.
func CertPathIsNil() predicate.Cert {
	return predicate.Cert(sql.FieldIsNull(FieldCertPath))
}

// CertPathNotNil applies the NotNil predicate on the "certPath" field.
func CertPathNotNil() predicate.Cert {
	return predicate.Cert(sql.FieldNotNull(FieldCertPath))
}

// CertPathEqualFold applies the EqualFold predicate on the "certPath" field.
func CertPathEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldCertPath, v))
}

// CertPathContainsFold applies the ContainsFold predicate on the "certPath" field.
func CertPathContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldCertPath, v))
}

// KeyPathEQ applies the EQ predicate on the "keyPath" field.
func KeyPathEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldKeyPath, v))
}

// KeyPathNEQ applies the NEQ predicate on the "keyPath" field.
func KeyPathNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldKeyPath, v))
}

// KeyPathIn applies the In predicate on the "keyPath" field.
func KeyPathIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldKeyPath, vs...))
}

// KeyPathNotIn applies the NotIn predicate on the "keyPath" field.
func KeyPathNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldKeyPath, vs...))
}

// KeyPathGT applies the GT predicate on the "keyPath" field.
func KeyPathGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldKeyPath, v))
}

// KeyPathGTE applies the GTE predicate on the "keyPath" field.
func KeyPathGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldKeyPath, v))
}

// KeyPathLT applies the LT predicate on the "keyPath" field.
func KeyPathLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldKeyPath, v))
}

// KeyPathLTE applies the LTE predicate on the "keyPath" field.
func KeyPathLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldKeyPath, v))
}

// KeyPathContains applies the Contains predicate on the "keyPath" field.
func KeyPathContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldKeyPath, v))
}

// KeyPathHasPrefix applies the HasPrefix predicate on the "keyPath" field.
func KeyPathHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldKeyPath, v))
}

// KeyPathHasSuffix applies the HasSuffix predicate on the "keyPath" field.
func KeyPathHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldKeyPath, v))
}

// KeyPathIsNil applies the IsNil predicate on the "keyPath" field.
func KeyPathIsNil() predicate.Cert {
	return predicate.Cert(sql.FieldIsNull(FieldKeyPath))
}

// KeyPathNotNil applies the NotNil predicate on the "keyPath" field.
func KeyPathNotNil() predicate.Cert {
	return predicate.Cert(sql.FieldNotNull(FieldKeyPath))
}

// KeyPathEqualFold applies the EqualFold predicate on the "keyPath" field.
func KeyPathEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldKeyPath, v))
}

// KeyPathContainsFold applies the ContainsFold predicate on the "keyPath" field.
func KeyPathContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldKeyPath, v))
}

// AutoEQ applies the EQ predicate on the "auto" field.
func AutoEQ(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldAuto, v))
}

// AutoNEQ applies the NEQ predicate on the "auto" field.
func AutoNEQ(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldAuto, v))
}

// ResultEQ applies the EQ predicate on the "result" field.
func ResultEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldResult, v))
}

// ResultNEQ applies the NEQ predicate on the "result" field.
func ResultNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldResult, v))
}

// ResultIn applies the In predicate on the "result" field.
func ResultIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldResult, vs...))
}

// ResultNotIn applies the NotIn predicate on the "result" field.
func ResultNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldResult, vs...))
}

// ResultGT applies the GT predicate on the "result" field.
func ResultGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldResult, v))
}

// ResultGTE applies the GTE predicate on the "result" field.
func ResultGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldResult, v))
}

// ResultLT applies the LT predicate on the "result" field.
func ResultLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldResult, v))
}

// ResultLTE applies the LTE predicate on the "result" field.
func ResultLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldResult, v))
}

// ResultContains applies the Contains predicate on the "result" field.
func ResultContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldResult, v))
}

// ResultHasPrefix applies the HasPrefix predicate on the "result" field.
func ResultHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldResult, v))
}

// ResultHasSuffix applies the HasSuffix predicate on the "result" field.
func ResultHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldResult, v))
}

// ResultIsNil applies the IsNil predicate on the "result" field.
func ResultIsNil() predicate.Cert {
	return predicate.Cert(sql.FieldIsNull(FieldResult))
}

// ResultNotNil applies the NotNil predicate on the "result" field.
func ResultNotNil() predicate.Cert {
	return predicate.Cert(sql.FieldNotNull(FieldResult))
}

// ResultEqualFold applies the EqualFold predicate on the "result" field.
func ResultEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldResult, v))
}

// ResultContainsFold applies the ContainsFold predicate on the "result" field.
func ResultContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldResult, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.NotPredicates(p))
}
