// Code generated by ent, DO NOT EDIT.

package cert

import (
	"sifu-tool/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldID, id))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldEmail, v))
}

// Cert applies equality check predicate on the "cert" field. It's identical to CertEQ.
func Cert(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldCert, v))
}

// Key applies equality check predicate on the "key" field. It's identical to KeyEQ.
func Key(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldKey, v))
}

// Auto applies equality check predicate on the "auto" field. It's identical to AutoEQ.
func Auto(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldAuto, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldEmail, v))
}

// CertEQ applies the EQ predicate on the "cert" field.
func CertEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldCert, v))
}

// CertNEQ applies the NEQ predicate on the "cert" field.
func CertNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldCert, v))
}

// CertIn applies the In predicate on the "cert" field.
func CertIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldCert, vs...))
}

// CertNotIn applies the NotIn predicate on the "cert" field.
func CertNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldCert, vs...))
}

// CertGT applies the GT predicate on the "cert" field.
func CertGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldCert, v))
}

// CertGTE applies the GTE predicate on the "cert" field.
func CertGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldCert, v))
}

// CertLT applies the LT predicate on the "cert" field.
func CertLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldCert, v))
}

// CertLTE applies the LTE predicate on the "cert" field.
func CertLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldCert, v))
}

// CertContains applies the Contains predicate on the "cert" field.
func CertContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldCert, v))
}

// CertHasPrefix applies the HasPrefix predicate on the "cert" field.
func CertHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldCert, v))
}

// CertHasSuffix applies the HasSuffix predicate on the "cert" field.
func CertHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldCert, v))
}

// CertIsNil applies the IsNil predicate on the "cert" field.
func CertIsNil() predicate.Cert {
	return predicate.Cert(sql.FieldIsNull(FieldCert))
}

// CertNotNil applies the NotNil predicate on the "cert" field.
func CertNotNil() predicate.Cert {
	return predicate.Cert(sql.FieldNotNull(FieldCert))
}

// CertEqualFold applies the EqualFold predicate on the "cert" field.
func CertEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldCert, v))
}

// CertContainsFold applies the ContainsFold predicate on the "cert" field.
func CertContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldCert, v))
}

// KeyEQ applies the EQ predicate on the "key" field.
func KeyEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldKey, v))
}

// KeyNEQ applies the NEQ predicate on the "key" field.
func KeyNEQ(v string) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldKey, v))
}

// KeyIn applies the In predicate on the "key" field.
func KeyIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldIn(FieldKey, vs...))
}

// KeyNotIn applies the NotIn predicate on the "key" field.
func KeyNotIn(vs ...string) predicate.Cert {
	return predicate.Cert(sql.FieldNotIn(FieldKey, vs...))
}

// KeyGT applies the GT predicate on the "key" field.
func KeyGT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGT(FieldKey, v))
}

// KeyGTE applies the GTE predicate on the "key" field.
func KeyGTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldGTE(FieldKey, v))
}

// KeyLT applies the LT predicate on the "key" field.
func KeyLT(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLT(FieldKey, v))
}

// KeyLTE applies the LTE predicate on the "key" field.
func KeyLTE(v string) predicate.Cert {
	return predicate.Cert(sql.FieldLTE(FieldKey, v))
}

// KeyContains applies the Contains predicate on the "key" field.
func KeyContains(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContains(FieldKey, v))
}

// KeyHasPrefix applies the HasPrefix predicate on the "key" field.
func KeyHasPrefix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasPrefix(FieldKey, v))
}

// KeyHasSuffix applies the HasSuffix predicate on the "key" field.
func KeyHasSuffix(v string) predicate.Cert {
	return predicate.Cert(sql.FieldHasSuffix(FieldKey, v))
}

// KeyIsNil applies the IsNil predicate on the "key" field.
func KeyIsNil() predicate.Cert {
	return predicate.Cert(sql.FieldIsNull(FieldKey))
}

// KeyNotNil applies the NotNil predicate on the "key" field.
func KeyNotNil() predicate.Cert {
	return predicate.Cert(sql.FieldNotNull(FieldKey))
}

// KeyEqualFold applies the EqualFold predicate on the "key" field.
func KeyEqualFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldEqualFold(FieldKey, v))
}

// KeyContainsFold applies the ContainsFold predicate on the "key" field.
func KeyContainsFold(v string) predicate.Cert {
	return predicate.Cert(sql.FieldContainsFold(FieldKey, v))
}

// AutoEQ applies the EQ predicate on the "auto" field.
func AutoEQ(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldEQ(FieldAuto, v))
}

// AutoNEQ applies the NEQ predicate on the "auto" field.
func AutoNEQ(v bool) predicate.Cert {
	return predicate.Cert(sql.FieldNEQ(FieldAuto, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Cert) predicate.Cert {
	return predicate.Cert(sql.NotPredicates(p))
}
