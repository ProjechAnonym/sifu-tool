// Code generated by ent, DO NOT EDIT.

package ddns

import (
	"sifu-tool/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldID, id))
}

// V4method applies equality check predicate on the "v4method" field. It's identical to V4methodEQ.
func V4method(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4method, v))
}

// V6method applies equality check predicate on the "v6method" field. It's identical to V6methodEQ.
func V6method(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6method, v))
}

// Ipv6 applies equality check predicate on the "ipv6" field. It's identical to Ipv6EQ.
func Ipv6(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldIpv6, v))
}

// Rev6 applies equality check predicate on the "rev6" field. It's identical to Rev6EQ.
func Rev6(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldRev6, v))
}

// Ipv4 applies equality check predicate on the "ipv4" field. It's identical to Ipv4EQ.
func Ipv4(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldIpv4, v))
}

// Rev4 applies equality check predicate on the "rev4" field. It's identical to Rev4EQ.
func Rev4(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldRev4, v))
}

// V4script applies equality check predicate on the "v4script" field. It's identical to V4scriptEQ.
func V4script(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4script, v))
}

// V4interface applies equality check predicate on the "v4interface" field. It's identical to V4interfaceEQ.
func V4interface(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4interface, v))
}

// V6script applies equality check predicate on the "v6script" field. It's identical to V6scriptEQ.
func V6script(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6script, v))
}

// V6interface applies equality check predicate on the "v6interface" field. It's identical to V6interfaceEQ.
func V6interface(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6interface, v))
}

// V4methodEQ applies the EQ predicate on the "v4method" field.
func V4methodEQ(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4method, v))
}

// V4methodNEQ applies the NEQ predicate on the "v4method" field.
func V4methodNEQ(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV4method, v))
}

// V4methodIn applies the In predicate on the "v4method" field.
func V4methodIn(vs ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV4method, vs...))
}

// V4methodNotIn applies the NotIn predicate on the "v4method" field.
func V4methodNotIn(vs ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV4method, vs...))
}

// V4methodGT applies the GT predicate on the "v4method" field.
func V4methodGT(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV4method, v))
}

// V4methodGTE applies the GTE predicate on the "v4method" field.
func V4methodGTE(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV4method, v))
}

// V4methodLT applies the LT predicate on the "v4method" field.
func V4methodLT(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV4method, v))
}

// V4methodLTE applies the LTE predicate on the "v4method" field.
func V4methodLTE(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV4method, v))
}

// V4methodIsNil applies the IsNil predicate on the "v4method" field.
func V4methodIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV4method))
}

// V4methodNotNil applies the NotNil predicate on the "v4method" field.
func V4methodNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV4method))
}

// V6methodEQ applies the EQ predicate on the "v6method" field.
func V6methodEQ(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6method, v))
}

// V6methodNEQ applies the NEQ predicate on the "v6method" field.
func V6methodNEQ(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV6method, v))
}

// V6methodIn applies the In predicate on the "v6method" field.
func V6methodIn(vs ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV6method, vs...))
}

// V6methodNotIn applies the NotIn predicate on the "v6method" field.
func V6methodNotIn(vs ...int) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV6method, vs...))
}

// V6methodGT applies the GT predicate on the "v6method" field.
func V6methodGT(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV6method, v))
}

// V6methodGTE applies the GTE predicate on the "v6method" field.
func V6methodGTE(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV6method, v))
}

// V6methodLT applies the LT predicate on the "v6method" field.
func V6methodLT(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV6method, v))
}

// V6methodLTE applies the LTE predicate on the "v6method" field.
func V6methodLTE(v int) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV6method, v))
}

// V6methodIsNil applies the IsNil predicate on the "v6method" field.
func V6methodIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV6method))
}

// V6methodNotNil applies the NotNil predicate on the "v6method" field.
func V6methodNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV6method))
}

// Ipv6EQ applies the EQ predicate on the "ipv6" field.
func Ipv6EQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldIpv6, v))
}

// Ipv6NEQ applies the NEQ predicate on the "ipv6" field.
func Ipv6NEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldIpv6, v))
}

// Ipv6In applies the In predicate on the "ipv6" field.
func Ipv6In(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldIpv6, vs...))
}

// Ipv6NotIn applies the NotIn predicate on the "ipv6" field.
func Ipv6NotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldIpv6, vs...))
}

// Ipv6GT applies the GT predicate on the "ipv6" field.
func Ipv6GT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldIpv6, v))
}

// Ipv6GTE applies the GTE predicate on the "ipv6" field.
func Ipv6GTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldIpv6, v))
}

// Ipv6LT applies the LT predicate on the "ipv6" field.
func Ipv6LT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldIpv6, v))
}

// Ipv6LTE applies the LTE predicate on the "ipv6" field.
func Ipv6LTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldIpv6, v))
}

// Ipv6Contains applies the Contains predicate on the "ipv6" field.
func Ipv6Contains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldIpv6, v))
}

// Ipv6HasPrefix applies the HasPrefix predicate on the "ipv6" field.
func Ipv6HasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldIpv6, v))
}

// Ipv6HasSuffix applies the HasSuffix predicate on the "ipv6" field.
func Ipv6HasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldIpv6, v))
}

// Ipv6IsNil applies the IsNil predicate on the "ipv6" field.
func Ipv6IsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldIpv6))
}

// Ipv6NotNil applies the NotNil predicate on the "ipv6" field.
func Ipv6NotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldIpv6))
}

// Ipv6EqualFold applies the EqualFold predicate on the "ipv6" field.
func Ipv6EqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldIpv6, v))
}

// Ipv6ContainsFold applies the ContainsFold predicate on the "ipv6" field.
func Ipv6ContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldIpv6, v))
}

// Rev6EQ applies the EQ predicate on the "rev6" field.
func Rev6EQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldRev6, v))
}

// Rev6NEQ applies the NEQ predicate on the "rev6" field.
func Rev6NEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldRev6, v))
}

// Rev6In applies the In predicate on the "rev6" field.
func Rev6In(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldRev6, vs...))
}

// Rev6NotIn applies the NotIn predicate on the "rev6" field.
func Rev6NotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldRev6, vs...))
}

// Rev6GT applies the GT predicate on the "rev6" field.
func Rev6GT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldRev6, v))
}

// Rev6GTE applies the GTE predicate on the "rev6" field.
func Rev6GTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldRev6, v))
}

// Rev6LT applies the LT predicate on the "rev6" field.
func Rev6LT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldRev6, v))
}

// Rev6LTE applies the LTE predicate on the "rev6" field.
func Rev6LTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldRev6, v))
}

// Rev6Contains applies the Contains predicate on the "rev6" field.
func Rev6Contains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldRev6, v))
}

// Rev6HasPrefix applies the HasPrefix predicate on the "rev6" field.
func Rev6HasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldRev6, v))
}

// Rev6HasSuffix applies the HasSuffix predicate on the "rev6" field.
func Rev6HasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldRev6, v))
}

// Rev6IsNil applies the IsNil predicate on the "rev6" field.
func Rev6IsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldRev6))
}

// Rev6NotNil applies the NotNil predicate on the "rev6" field.
func Rev6NotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldRev6))
}

// Rev6EqualFold applies the EqualFold predicate on the "rev6" field.
func Rev6EqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldRev6, v))
}

// Rev6ContainsFold applies the ContainsFold predicate on the "rev6" field.
func Rev6ContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldRev6, v))
}

// Ipv4EQ applies the EQ predicate on the "ipv4" field.
func Ipv4EQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldIpv4, v))
}

// Ipv4NEQ applies the NEQ predicate on the "ipv4" field.
func Ipv4NEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldIpv4, v))
}

// Ipv4In applies the In predicate on the "ipv4" field.
func Ipv4In(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldIpv4, vs...))
}

// Ipv4NotIn applies the NotIn predicate on the "ipv4" field.
func Ipv4NotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldIpv4, vs...))
}

// Ipv4GT applies the GT predicate on the "ipv4" field.
func Ipv4GT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldIpv4, v))
}

// Ipv4GTE applies the GTE predicate on the "ipv4" field.
func Ipv4GTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldIpv4, v))
}

// Ipv4LT applies the LT predicate on the "ipv4" field.
func Ipv4LT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldIpv4, v))
}

// Ipv4LTE applies the LTE predicate on the "ipv4" field.
func Ipv4LTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldIpv4, v))
}

// Ipv4Contains applies the Contains predicate on the "ipv4" field.
func Ipv4Contains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldIpv4, v))
}

// Ipv4HasPrefix applies the HasPrefix predicate on the "ipv4" field.
func Ipv4HasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldIpv4, v))
}

// Ipv4HasSuffix applies the HasSuffix predicate on the "ipv4" field.
func Ipv4HasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldIpv4, v))
}

// Ipv4IsNil applies the IsNil predicate on the "ipv4" field.
func Ipv4IsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldIpv4))
}

// Ipv4NotNil applies the NotNil predicate on the "ipv4" field.
func Ipv4NotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldIpv4))
}

// Ipv4EqualFold applies the EqualFold predicate on the "ipv4" field.
func Ipv4EqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldIpv4, v))
}

// Ipv4ContainsFold applies the ContainsFold predicate on the "ipv4" field.
func Ipv4ContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldIpv4, v))
}

// Rev4EQ applies the EQ predicate on the "rev4" field.
func Rev4EQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldRev4, v))
}

// Rev4NEQ applies the NEQ predicate on the "rev4" field.
func Rev4NEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldRev4, v))
}

// Rev4In applies the In predicate on the "rev4" field.
func Rev4In(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldRev4, vs...))
}

// Rev4NotIn applies the NotIn predicate on the "rev4" field.
func Rev4NotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldRev4, vs...))
}

// Rev4GT applies the GT predicate on the "rev4" field.
func Rev4GT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldRev4, v))
}

// Rev4GTE applies the GTE predicate on the "rev4" field.
func Rev4GTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldRev4, v))
}

// Rev4LT applies the LT predicate on the "rev4" field.
func Rev4LT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldRev4, v))
}

// Rev4LTE applies the LTE predicate on the "rev4" field.
func Rev4LTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldRev4, v))
}

// Rev4Contains applies the Contains predicate on the "rev4" field.
func Rev4Contains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldRev4, v))
}

// Rev4HasPrefix applies the HasPrefix predicate on the "rev4" field.
func Rev4HasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldRev4, v))
}

// Rev4HasSuffix applies the HasSuffix predicate on the "rev4" field.
func Rev4HasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldRev4, v))
}

// Rev4IsNil applies the IsNil predicate on the "rev4" field.
func Rev4IsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldRev4))
}

// Rev4NotNil applies the NotNil predicate on the "rev4" field.
func Rev4NotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldRev4))
}

// Rev4EqualFold applies the EqualFold predicate on the "rev4" field.
func Rev4EqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldRev4, v))
}

// Rev4ContainsFold applies the ContainsFold predicate on the "rev4" field.
func Rev4ContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldRev4, v))
}

// V4scriptEQ applies the EQ predicate on the "v4script" field.
func V4scriptEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4script, v))
}

// V4scriptNEQ applies the NEQ predicate on the "v4script" field.
func V4scriptNEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV4script, v))
}

// V4scriptIn applies the In predicate on the "v4script" field.
func V4scriptIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV4script, vs...))
}

// V4scriptNotIn applies the NotIn predicate on the "v4script" field.
func V4scriptNotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV4script, vs...))
}

// V4scriptGT applies the GT predicate on the "v4script" field.
func V4scriptGT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV4script, v))
}

// V4scriptGTE applies the GTE predicate on the "v4script" field.
func V4scriptGTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV4script, v))
}

// V4scriptLT applies the LT predicate on the "v4script" field.
func V4scriptLT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV4script, v))
}

// V4scriptLTE applies the LTE predicate on the "v4script" field.
func V4scriptLTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV4script, v))
}

// V4scriptContains applies the Contains predicate on the "v4script" field.
func V4scriptContains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldV4script, v))
}

// V4scriptHasPrefix applies the HasPrefix predicate on the "v4script" field.
func V4scriptHasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldV4script, v))
}

// V4scriptHasSuffix applies the HasSuffix predicate on the "v4script" field.
func V4scriptHasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldV4script, v))
}

// V4scriptIsNil applies the IsNil predicate on the "v4script" field.
func V4scriptIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV4script))
}

// V4scriptNotNil applies the NotNil predicate on the "v4script" field.
func V4scriptNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV4script))
}

// V4scriptEqualFold applies the EqualFold predicate on the "v4script" field.
func V4scriptEqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldV4script, v))
}

// V4scriptContainsFold applies the ContainsFold predicate on the "v4script" field.
func V4scriptContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldV4script, v))
}

// V4interfaceEQ applies the EQ predicate on the "v4interface" field.
func V4interfaceEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV4interface, v))
}

// V4interfaceNEQ applies the NEQ predicate on the "v4interface" field.
func V4interfaceNEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV4interface, v))
}

// V4interfaceIn applies the In predicate on the "v4interface" field.
func V4interfaceIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV4interface, vs...))
}

// V4interfaceNotIn applies the NotIn predicate on the "v4interface" field.
func V4interfaceNotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV4interface, vs...))
}

// V4interfaceGT applies the GT predicate on the "v4interface" field.
func V4interfaceGT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV4interface, v))
}

// V4interfaceGTE applies the GTE predicate on the "v4interface" field.
func V4interfaceGTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV4interface, v))
}

// V4interfaceLT applies the LT predicate on the "v4interface" field.
func V4interfaceLT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV4interface, v))
}

// V4interfaceLTE applies the LTE predicate on the "v4interface" field.
func V4interfaceLTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV4interface, v))
}

// V4interfaceContains applies the Contains predicate on the "v4interface" field.
func V4interfaceContains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldV4interface, v))
}

// V4interfaceHasPrefix applies the HasPrefix predicate on the "v4interface" field.
func V4interfaceHasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldV4interface, v))
}

// V4interfaceHasSuffix applies the HasSuffix predicate on the "v4interface" field.
func V4interfaceHasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldV4interface, v))
}

// V4interfaceIsNil applies the IsNil predicate on the "v4interface" field.
func V4interfaceIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV4interface))
}

// V4interfaceNotNil applies the NotNil predicate on the "v4interface" field.
func V4interfaceNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV4interface))
}

// V4interfaceEqualFold applies the EqualFold predicate on the "v4interface" field.
func V4interfaceEqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldV4interface, v))
}

// V4interfaceContainsFold applies the ContainsFold predicate on the "v4interface" field.
func V4interfaceContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldV4interface, v))
}

// V6scriptEQ applies the EQ predicate on the "v6script" field.
func V6scriptEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6script, v))
}

// V6scriptNEQ applies the NEQ predicate on the "v6script" field.
func V6scriptNEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV6script, v))
}

// V6scriptIn applies the In predicate on the "v6script" field.
func V6scriptIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV6script, vs...))
}

// V6scriptNotIn applies the NotIn predicate on the "v6script" field.
func V6scriptNotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV6script, vs...))
}

// V6scriptGT applies the GT predicate on the "v6script" field.
func V6scriptGT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV6script, v))
}

// V6scriptGTE applies the GTE predicate on the "v6script" field.
func V6scriptGTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV6script, v))
}

// V6scriptLT applies the LT predicate on the "v6script" field.
func V6scriptLT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV6script, v))
}

// V6scriptLTE applies the LTE predicate on the "v6script" field.
func V6scriptLTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV6script, v))
}

// V6scriptContains applies the Contains predicate on the "v6script" field.
func V6scriptContains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldV6script, v))
}

// V6scriptHasPrefix applies the HasPrefix predicate on the "v6script" field.
func V6scriptHasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldV6script, v))
}

// V6scriptHasSuffix applies the HasSuffix predicate on the "v6script" field.
func V6scriptHasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldV6script, v))
}

// V6scriptIsNil applies the IsNil predicate on the "v6script" field.
func V6scriptIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV6script))
}

// V6scriptNotNil applies the NotNil predicate on the "v6script" field.
func V6scriptNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV6script))
}

// V6scriptEqualFold applies the EqualFold predicate on the "v6script" field.
func V6scriptEqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldV6script, v))
}

// V6scriptContainsFold applies the ContainsFold predicate on the "v6script" field.
func V6scriptContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldV6script, v))
}

// V6interfaceEQ applies the EQ predicate on the "v6interface" field.
func V6interfaceEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEQ(FieldV6interface, v))
}

// V6interfaceNEQ applies the NEQ predicate on the "v6interface" field.
func V6interfaceNEQ(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNEQ(FieldV6interface, v))
}

// V6interfaceIn applies the In predicate on the "v6interface" field.
func V6interfaceIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldIn(FieldV6interface, vs...))
}

// V6interfaceNotIn applies the NotIn predicate on the "v6interface" field.
func V6interfaceNotIn(vs ...string) predicate.DDNS {
	return predicate.DDNS(sql.FieldNotIn(FieldV6interface, vs...))
}

// V6interfaceGT applies the GT predicate on the "v6interface" field.
func V6interfaceGT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGT(FieldV6interface, v))
}

// V6interfaceGTE applies the GTE predicate on the "v6interface" field.
func V6interfaceGTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldGTE(FieldV6interface, v))
}

// V6interfaceLT applies the LT predicate on the "v6interface" field.
func V6interfaceLT(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLT(FieldV6interface, v))
}

// V6interfaceLTE applies the LTE predicate on the "v6interface" field.
func V6interfaceLTE(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldLTE(FieldV6interface, v))
}

// V6interfaceContains applies the Contains predicate on the "v6interface" field.
func V6interfaceContains(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContains(FieldV6interface, v))
}

// V6interfaceHasPrefix applies the HasPrefix predicate on the "v6interface" field.
func V6interfaceHasPrefix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasPrefix(FieldV6interface, v))
}

// V6interfaceHasSuffix applies the HasSuffix predicate on the "v6interface" field.
func V6interfaceHasSuffix(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldHasSuffix(FieldV6interface, v))
}

// V6interfaceIsNil applies the IsNil predicate on the "v6interface" field.
func V6interfaceIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldV6interface))
}

// V6interfaceNotNil applies the NotNil predicate on the "v6interface" field.
func V6interfaceNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldV6interface))
}

// V6interfaceEqualFold applies the EqualFold predicate on the "v6interface" field.
func V6interfaceEqualFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldEqualFold(FieldV6interface, v))
}

// V6interfaceContainsFold applies the ContainsFold predicate on the "v6interface" field.
func V6interfaceContainsFold(v string) predicate.DDNS {
	return predicate.DDNS(sql.FieldContainsFold(FieldV6interface, v))
}

// ResultIsNil applies the IsNil predicate on the "result" field.
func ResultIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldResult))
}

// ResultNotNil applies the NotNil predicate on the "result" field.
func ResultNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldResult))
}

// WebhookIsNil applies the IsNil predicate on the "webhook" field.
func WebhookIsNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldIsNull(FieldWebhook))
}

// WebhookNotNil applies the NotNil predicate on the "webhook" field.
func WebhookNotNil() predicate.DDNS {
	return predicate.DDNS(sql.FieldNotNull(FieldWebhook))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DDNS) predicate.DDNS {
	return predicate.DDNS(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DDNS) predicate.DDNS {
	return predicate.DDNS(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DDNS) predicate.DDNS {
	return predicate.DDNS(sql.NotPredicates(p))
}
